/*
   MoreBasicFunctions - A LibreOffice Add-On written in Java that provides more basic functions.
   Copyright (C) 2021 Julien FÃ©rard.

   MoreBasicFunctions is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   MoreBasicFunctions is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
#ifndef INCLUDED_COM_GITHUB_JFERARD_MBFS_XCHARACTERS
#define INCLUDED_COM_GITHUB_JFERARD_MBFS_XCHARACTERS

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/lang/IllegalArgumentException.idl>

module com { module github { module jferard { module mbfs {

interface XCharacters: ::com::sun::star::uno::XInterface {
    /**
    Return true if the string has only one char
    */
    boolean isChar([in] string s);

    /**
    Return true if the one char string is a letter
    */
    boolean isLetter([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return true if the one char string is a letter and is lower case
    */
    boolean isLowerCase([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return true if the one char string is a letter and is lower case
    */
    boolean isUpperCase([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return true if the one char string is a digit
    */
    boolean isDigit([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return true if the one char string is a punctuation char
    */
    boolean isPunctuation([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return true if the one char string is a space
    */
    boolean isSpace([in] string s)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return the char at that code point

    Basic : CHR
    */
    string chr([in] long codePoint)
            raises( ::com::sun::star::lang::IllegalArgumentException);

    /**
    Return the code point of that one character string

    Basic : ORD
    */
    long ord([in] string character)
            raises( ::com::sun::star::lang::IllegalArgumentException);
};

}; }; }; };

#endif
